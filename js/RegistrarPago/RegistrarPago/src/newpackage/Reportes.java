/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package newpackage;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
/**
 *
 * @author PAUL
 */
public class Reportes extends javax.swing.JFrame {

    /**
     * Creates new form Reportes
     */
    public Reportes() {
        initComponents();
        tbReportes.setModel(TablePagos.modeloPagos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtDniReportes = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dateFinRep = new javax.swing.JFormattedTextField();
        dateInicioRep = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnFiltrarPago = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnNoMatriculados = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        btnMatriculados = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnDeudaPension = new javax.swing.JButton();
        btnMatriculados2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbReportes = new javax.swing.JTable();
        lblDeudaImpre = new javax.swing.JLabel();
        lblNoMatriculados = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblTotalGanancia = new javax.swing.JLabel();
        lblMatriculados1 = new javax.swing.JLabel();
        lblDeudaPen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(869, 648));
        getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(0, 204, 102));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel1.setText("REPORTES");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(742, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 0, 870, 60);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel5.setText("(Requiere agregar un periodo)");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 280, 160, 14);

        txtDniReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniReportesActionPerformed(evt);
            }
        });
        jPanel1.add(txtDniReportes);
        txtDniReportes.setBounds(20, 30, 150, 22);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel6.setText("Fecha de fin");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 140, 80, 15);

        dateFinRep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        dateFinRep.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dateFinRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFinRepActionPerformed(evt);
            }
        });
        jPanel1.add(dateFinRep);
        dateFinRep.setBounds(20, 160, 150, 22);

        dateInicioRep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        dateInicioRep.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dateInicioRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateInicioRepActionPerformed(evt);
            }
        });
        jPanel1.add(dateInicioRep);
        dateInicioRep.setBounds(20, 110, 150, 22);

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel7.setText("DNI");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 10, 18, 15);

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel8.setText("Fecha de inicio");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 90, 90, 15);

        btnFiltrarPago.setBackground(new java.awt.Color(0, 204, 102));
        btnFiltrarPago.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        btnFiltrarPago.setText("FILTRAR PAGO/S");
        btnFiltrarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarPagoActionPerformed(evt);
            }
        });
        jPanel1.add(btnFiltrarPago);
        btnFiltrarPago.setBounds(20, 200, 150, 22);

        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(0, 240, 190, 10);

        btnNoMatriculados.setBackground(new java.awt.Color(0, 204, 102));
        btnNoMatriculados.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        btnNoMatriculados.setText("VER NO MATRICULADOS");
        btnNoMatriculados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoMatriculadosActionPerformed(evt);
            }
        });
        jPanel1.add(btnNoMatriculados);
        btnNoMatriculados.setBounds(20, 340, 150, 21);

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel9.setText("PERIODO:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(20, 70, 100, 15);

        btnRegresar.setFont(new java.awt.Font("Trebuchet MS", 1, 13)); // NOI18N
        btnRegresar.setText("REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar);
        btnRegresar.setBounds(0, 520, 190, 30);

        btnMatriculados.setBackground(new java.awt.Color(0, 204, 102));
        btnMatriculados.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        btnMatriculados.setText("VER MATRICULADOS");
        btnMatriculados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatriculadosActionPerformed(evt);
            }
        });
        jPanel1.add(btnMatriculados);
        btnMatriculados.setBounds(20, 310, 150, 21);

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel11.setText("OTRAS ACCIONES:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(20, 260, 100, 15);

        btnDeudaPension.setBackground(new java.awt.Color(0, 204, 102));
        btnDeudaPension.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        btnDeudaPension.setText("DEUDAS DE PENSIÓN");
        btnDeudaPension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeudaPensionActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeudaPension);
        btnDeudaPension.setBounds(20, 390, 150, 21);

        btnMatriculados2.setBackground(new java.awt.Color(0, 204, 102));
        btnMatriculados2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        btnMatriculados2.setText("DEUDAS DE IMPRESOS");
        btnMatriculados2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatriculados2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnMatriculados2);
        btnMatriculados2.setBounds(20, 420, 150, 21);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 60, 190, 550);

        tbReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Dni", "Mes", "Saldo", "Fecha", "N° de Recibo", "Entidad Financiera", "Tipo de Pago"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbReportes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(220, 80, 620, 220);

        lblDeudaImpre.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        lblDeudaImpre.setText("Estudiantes con deudas de impresos: 0");
        getContentPane().add(lblDeudaImpre);
        lblDeudaImpre.setBounds(220, 510, 270, 15);

        lblNoMatriculados.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        lblNoMatriculados.setText("Estudiantes sin matricula: 0");
        getContentPane().add(lblNoMatriculados);
        lblNoMatriculados.setBounds(520, 360, 200, 15);

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel10.setText("ESTADÍSTICAS:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(220, 310, 90, 15);

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel12.setText("(Datos calculados apartir del periodo propuesto).");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(220, 330, 260, 14);

        lblTotalGanancia.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        lblTotalGanancia.setText("Total recaudado: S/ 0.00");
        getContentPane().add(lblTotalGanancia);
        lblTotalGanancia.setBounds(220, 400, 250, 15);

        lblMatriculados1.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        lblMatriculados1.setText("Estudiantes matriculados: 0");
        getContentPane().add(lblMatriculados1);
        lblMatriculados1.setBounds(220, 360, 200, 15);

        lblDeudaPen.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        lblDeudaPen.setText("Estudiantes con deudas de pensión: 0");
        getContentPane().add(lblDeudaPen);
        lblDeudaPen.setBounds(220, 480, 260, 15);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDniReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniReportesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDniReportesActionPerformed

    private void dateFinRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFinRepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFinRepActionPerformed

    private void dateInicioRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateInicioRepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateInicioRepActionPerformed

    private void btnFiltrarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarPagoActionPerformed
        if (dateInicioRep.getText().trim().isEmpty()|| dateFinRep.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Debes ingresar ambas fechas.", "Error de periodo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String dni = txtDniReportes.getText().trim();
        String fechaInicio = dateInicioRep.getText().trim();
        String fechaFin = dateFinRep.getText().trim();
        
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        PreparedStatement pstTotal = null;
        ResultSet rsTotal = null;
        
        try{
            conn = ConexionSQL.getConexion();
            String sql = "SELECT * FROM tb_pagos WHERE fecha BETWEEN ? AND ?";
            
            if (!dni.isEmpty()) {
                sql += " AND dni_estudiante = ?";
            }
            
            pst = conn.prepareStatement(sql);
            
            pst.setString(1, fechaInicio);
            pst.setString(2, fechaFin);
            
            if (!dni.isEmpty()) {
                pst.setString(3, dni);
            }
            
            rs = pst.executeQuery();
            
            TablePagos.modeloPagos.setRowCount(0);
            
            while (rs.next()) {
                Object[] fila = {
                    rs.getString("id_pagos"),
                    rs.getString("dni_estudiante"),
                    rs.getString("mes"),
                    rs.getDouble("saldo"),
                    rs.getString("fecha"),
                    rs.getString("num_recibo"),
                    rs.getString("entidad_financiera"),
                    rs.getString("tipo_pago")
                };
                TablePagos.modeloPagos.addRow(fila);
            }
            tbReportes.setModel(TablePagos.modeloPagos);
            
            String sqlTotal = "SELECT SUM(saldo) AS total FROM tb_pagos WHERE fecha BETWEEN ? AND ?";
            if (!dni.isEmpty()) {
                sqlTotal += " AND dni_estudiante = ?";
            }  
            
            pstTotal = conn.prepareStatement(sqlTotal);
            
            pstTotal.setString(1, fechaInicio);
            pstTotal.setString(2, fechaFin);
            
            if (!dni.isEmpty()) {
                pstTotal.setString(3, dni);
            }
            
            rsTotal = pstTotal.executeQuery();
            
            if (rsTotal.next()) {
                double total = rsTotal.getDouble("total");
                lblTotalGanancia.setText("Total recaudado: S/ " + String.format("%.2f", total));
            } else {
                lblTotalGanancia.setText("Total recaudado: S/ 0.00");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al hacer la consulta: " + e.getMessage());
        } 
        finally{
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (rsTotal != null) rsTotal.close();
                if (pstTotal != null) pstTotal.close();
                if (conn != null) conn.close();
            }catch (SQLException e){
                
            }
        }
    }//GEN-LAST:event_btnFiltrarPagoActionPerformed

    private void btnNoMatriculadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoMatriculadosActionPerformed
        if (dateInicioRep.getText().trim().isEmpty()|| dateFinRep.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Debes ingresar un periodo (ambas fechas).", "Error de periodo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String dni = txtDniReportes.getText().trim();
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        
        try{
            conn = ConexionSQL.getConexion();    
            String sql = "SELECT e.id, e.dni, e.nombres, e.apellidos, e.sexo, e.domicilio, e.IE_procedencia " +
             "FROM tb_estudiante e " +
             "WHERE NOT EXISTS (" +
             "  SELECT 1 FROM tb_matricula m " +
             "  WHERE m.dni_estudiante = e.dni AND m.fecha BETWEEN ? AND ?" +
             ")";
            
            if (!dni.isEmpty()) {
                sql += " AND dni = ?";
            }
            
            pst = conn.prepareStatement(sql);
            
            SimpleDateFormat sdf = new SimpleDateFormat("d/MM/yy");
            java.sql.Date fechaInicioSQL = new java.sql.Date(sdf.parse(dateInicioRep.getText().trim()).getTime());
            java.sql.Date fechaFinSQL = new java.sql.Date(sdf.parse(dateFinRep.getText().trim()).getTime());
            
            pst.setDate(1, fechaInicioSQL);
            pst.setDate(2, fechaFinSQL);
            
            if (!dni.isEmpty()) {
                pst.setString(3, dni);
            }
            
            rs = pst.executeQuery();
            
            TableEstudiantes.modeloEstudiantes.setRowCount(0);
            
            while (rs.next()) {
                Object[] fila = {
                    rs.getString("id"),
                    rs.getString("nombres"),
                    rs.getString("apellidos"),
                    rs.getString("dni"),
                    rs.getString("sexo"),
                    rs.getString("domicilio"),
                    rs.getString("IE_procedencia"),
                };
                TableEstudiantes.modeloEstudiantes.addRow(fila);
            }
            tbReportes.setModel(TableEstudiantes.modeloEstudiantes);   
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al hacer la consulta: " + e.getMessage());
        }
        finally{
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (conn != null) conn.close();
            }catch (SQLException e){
                
            }
        }
        lblNoMatriculados.setText("Estudiantes sin matricula: " + TableEstudiantes.modeloEstudiantes.getRowCount());
        lblTotalGanancia.setText("Total recaudado: S/ 0.00");
    }//GEN-LAST:event_btnNoMatriculadosActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        PantallaInicio panelControl = new PantallaInicio();
        panelControl.setVisible(true);
        panelControl.setLocationRelativeTo(null);
        this.dispose();     
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnMatriculadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatriculadosActionPerformed
        if (dateInicioRep.getText().trim().isEmpty()|| dateFinRep.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Debes ingresar un periodo (ambas fechas).", "Error de periodo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String dni = txtDniReportes.getText().trim();
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        PreparedStatement pstTotal = null;
        ResultSet rsTotal = null;
        
        try{
            conn = ConexionSQL.getConexion();    
            String sql = "SELECT e.id, e.dni, e.nombres, e.apellidos, e.sexo, e.domicilio, e.IE_procedencia, " +
             "m.fecha, m.num_recibo, m.entidad_financiera, m.saldo " +
             "FROM tb_estudiante e " +
             "JOIN tb_matricula m ON e.dni = m.dni_estudiante " +
             "WHERE m.fecha BETWEEN ? AND ?";
            
            if (!dni.isEmpty()) {
                sql += " AND dni = ?";
            }
            
            pst = conn.prepareStatement(sql);
            
            SimpleDateFormat sdf = new SimpleDateFormat("d/MM/yy");
            java.sql.Date fechaInicioSQL = new java.sql.Date(sdf.parse(dateInicioRep.getText().trim()).getTime());
            java.sql.Date fechaFinSQL = new java.sql.Date(sdf.parse(dateFinRep.getText().trim()).getTime());
            
            pst.setDate(1, fechaInicioSQL);
            pst.setDate(2, fechaFinSQL);
            
            if (!dni.isEmpty()) {
                pst.setString(3, dni);
            }
            
            rs = pst.executeQuery();
            
            TableMatriculados.modeloMatriculados.setRowCount(0);
            
            while (rs.next()) {
                Object[] fila = {
                    rs.getString("id"),
                    rs.getString("nombres"),
                    rs.getString("apellidos"),
                    rs.getString("dni"),
                    rs.getString("sexo"),
                    rs.getString("domicilio"),
                    rs.getString("IE_procedencia"),
                    rs.getDouble("saldo"),
                    rs.getString("fecha"),
                    rs.getString("num_recibo"),
                    rs.getString("entidad_financiera")
                    
                };
                TableMatriculados.modeloMatriculados.addRow(fila);
            }
            tbReportes.setModel(TableMatriculados.modeloMatriculados);
            
            String sqlTotal = "SELECT SUM(saldo) AS total FROM tb_matricula WHERE fecha BETWEEN ? AND ?";
            
            pstTotal = conn.prepareStatement(sqlTotal);
            
            pstTotal.setDate(1, fechaInicioSQL);
            pstTotal.setDate(2, fechaFinSQL);
            
            rsTotal = pstTotal.executeQuery();
            
            if (rsTotal.next()) {
                double total = rsTotal.getDouble("total");
                lblTotalGanancia.setText("Total por matrículas: S/ " + String.format("%.2f", total));
            } else {
                lblTotalGanancia.setText("Total por matrículas: S/ 0.00");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al hacer la consulta: " + e.getMessage());
        }
        finally{
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (conn != null) conn.close();
            }catch (SQLException e){
                
            }
        }
        lblMatriculados1.setText("Estudiantes matriculados: " + TableMatriculados.modeloMatriculados.getRowCount());
    }//GEN-LAST:event_btnMatriculadosActionPerformed

    private void btnDeudaPensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeudaPensionActionPerformed
        if (dateInicioRep.getText().trim().isEmpty()|| dateFinRep.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Debes ingresar un periodo (ambas fechas).", "Error de periodo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String dni = txtDniReportes.getText().trim();
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        PreparedStatement pstTotal = null;
        ResultSet rsTotal = null;
        
        try{
            conn = ConexionSQL.getConexion();    
            String sql = "SELECT e.id, e.dni, e.nombres, e.apellidos, e.sexo, e.domicilio, e.IE_procedencia " +
             "FROM tb_estudiante e " +
             "WHERE NOT EXISTS (" +
             "  SELECT 1 FROM tb_pensiones m " +
             "  WHERE m.dni_estudiante = e.dni AND m.fecha BETWEEN ? AND ?" +
             ")";
            
            if (!dni.isEmpty()) {
                sql += " AND dni = ?";
            }
            
            pst = conn.prepareStatement(sql);
            
            SimpleDateFormat sdf = new SimpleDateFormat("d/MM/yy");
            java.sql.Date fechaInicioSQL = new java.sql.Date(sdf.parse(dateInicioRep.getText().trim()).getTime());
            java.sql.Date fechaFinSQL = new java.sql.Date(sdf.parse(dateFinRep.getText().trim()).getTime());
            
            pst.setDate(1, fechaInicioSQL);
            pst.setDate(2, fechaFinSQL);
            
            if (!dni.isEmpty()) {
                pst.setString(3, dni);
            }
            
            rs = pst.executeQuery();
            
            TableEstudiantes.modeloEstudiantes.setRowCount(0);
            
            while (rs.next()) {
                Object[] fila = {
                    rs.getString("id"),
                    rs.getString("nombres"),
                    rs.getString("apellidos"),
                    rs.getString("dni"),
                    rs.getString("sexo"),
                    rs.getString("domicilio"),
                    rs.getString("IE_procedencia"),
                };
                TableEstudiantes.modeloEstudiantes.addRow(fila);
            }
            tbReportes.setModel(TableEstudiantes.modeloEstudiantes);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al hacer la consulta: " + e.getMessage());
        }
        finally{
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (conn != null) conn.close();
            }catch (SQLException e){
                
            }
        }
        lblDeudaPen.setText("Estudiantes con deudas de pensión: " + TableEstudiantes.modeloEstudiantes.getRowCount());
    }//GEN-LAST:event_btnDeudaPensionActionPerformed

    private void btnMatriculados2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatriculados2ActionPerformed
        if (dateInicioRep.getText().trim().isEmpty()|| dateFinRep.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Debes ingresar un periodo (ambas fechas).", "Error de periodo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String dni = txtDniReportes.getText().trim();
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        PreparedStatement pstTotal = null;
        ResultSet rsTotal = null;
        
        try{
            conn = ConexionSQL.getConexion();    
            String sql = "SELECT e.id, e.dni, e.nombres, e.apellidos, e.sexo, e.domicilio, e.IE_procedencia " +
             "FROM tb_estudiante e " +
             "WHERE NOT EXISTS (" +
             "  SELECT 1 FROM tb_impresos m " +
             "  WHERE m.dni_estudiante = e.dni AND m.fecha BETWEEN ? AND ?" +
             ")";
            
            if (!dni.isEmpty()) {
                sql += " AND dni = ?";
            }
            
            pst = conn.prepareStatement(sql);
            
            SimpleDateFormat sdf = new SimpleDateFormat("d/MM/yy");
            java.sql.Date fechaInicioSQL = new java.sql.Date(sdf.parse(dateInicioRep.getText().trim()).getTime());
            java.sql.Date fechaFinSQL = new java.sql.Date(sdf.parse(dateFinRep.getText().trim()).getTime());
            
            pst.setDate(1, fechaInicioSQL);
            pst.setDate(2, fechaFinSQL);
            
            if (!dni.isEmpty()) {
                pst.setString(3, dni);
            }
            
            rs = pst.executeQuery();
            
            TableEstudiantes.modeloEstudiantes.setRowCount(0);
            
            while (rs.next()) {
                Object[] fila = {
                    rs.getString("id"),
                    rs.getString("nombres"),
                    rs.getString("apellidos"),
                    rs.getString("dni"),
                    rs.getString("sexo"),
                    rs.getString("domicilio"),
                    rs.getString("IE_procedencia"),
                };
                TableEstudiantes.modeloEstudiantes.addRow(fila);
            }
            tbReportes.setModel(TableEstudiantes.modeloEstudiantes);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al hacer la consulta: " + e.getMessage());
        }
        finally{
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (conn != null) conn.close();
            }catch (SQLException e){
                
            }
        }
        lblDeudaImpre.setText("Estudiantes con deudas de impresos: " + TableEstudiantes.modeloEstudiantes.getRowCount());
    }//GEN-LAST:event_btnMatriculados2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnDeudaPension;
    public javax.swing.JButton btnFiltrarPago;
    public javax.swing.JButton btnMatriculados;
    public javax.swing.JButton btnMatriculados2;
    public javax.swing.JButton btnNoMatriculados;
    public javax.swing.JButton btnRegresar;
    public javax.swing.JFormattedTextField dateFinRep;
    public javax.swing.JFormattedTextField dateInicioRep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JLabel lblDeudaImpre;
    public javax.swing.JLabel lblDeudaPen;
    public javax.swing.JLabel lblMatriculados1;
    public javax.swing.JLabel lblNoMatriculados;
    public javax.swing.JLabel lblTotalGanancia;
    public javax.swing.JTable tbReportes;
    public javax.swing.JTextField txtDniReportes;
    // End of variables declaration//GEN-END:variables
}
